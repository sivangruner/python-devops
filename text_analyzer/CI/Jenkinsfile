pipeline {
    agent any
    environment {
        GIT_TAG_VALUE = '' // Jenkins env variable
    }
    stages {

        stage('Lint') {
            when{
                expression{isTagBuild()}
            }
            steps {
                dir('.\\text_analyzer') {
                    bat 'task lint'
                }
            }
        }

        stage('Build Package') {
            when{
                expression{isTagBuild()}
            }
            steps {
                dir('.\\text_analyzer') {
                    bat 'task clean'
                    bat "task build ver=\"${env.GIT_TAG_VALUE.replaceFirst('^v','')}\""
                }
            }
        }


        stage('Test') {
            when{
                expression{isTagBuild()}
            }
            steps {
                dir('.\\text_analyzer') {
                    bat 'task test'
                }
            }
        }
    }
}


def isTagBuild() {
    def tagPattern = java.util.regex.Pattern.compile('^v\\d+\\.\\d+\\.\\d+$')

    def tagOutput = '' // declare outside try so it's accessible after
    try {
        tagOutput = bat(
            script: 'git describe --tags --exact-match || echo ""',
            returnStdout: true
        ).trim()
    } catch (err) {
        echo "No tag detected, skipping stages."
        return false
    }

    env.GIT_TAG_VALUE  = tagOutput.readLines().last().trim()
    echo "Detected tag: ${env.GIT_TAG_VALUE}"

    return env.GIT_TAG_VALUE ==~ tagPattern
}

