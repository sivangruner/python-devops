pipeline {
    agent any
    environment {
        GIT_TAG_VALUE = ''
    }
    stages {
        stage('Detect Tag') {
            steps {
                script {
                    // Get the tag if the current commit has one
                    def tagOutput = bat(
                        script: 'git describe --tags --exact-match 2>nul || echo',
                        returnStdout: true
                    ).trim()

                    if (tagOutput) {
                        env.GIT_TAG_VALUE = tagOutput
                        echo "Detected tag: ${env.GIT_TAG_VALUE}"
                    } else {
                        echo "No tag detected skipping pipeline"
                        currentBuild.result = 'NOT_BUILT'
                        error("This build is not for a tag.")
                    }
                }
            }
        }

        stage('Lint') {
            steps {
                dir('.\\text_analyzer') {
                    bat 'task lint'
                }
            }
        }

        stage('Build Package') {
            steps {
                dir('.\\text_analyzer') {
                    bat 'task clean'
                    bat "task build ver=\"${env.GIT_TAG_VALUE.replaceFirst('^v','')}\""
                }
            }
        }

        stage('Test') {
            steps {
                dir('.\\text_analyzer') {
                    bat 'task test'
                }
            }
        }
    }
}
