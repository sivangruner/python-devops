"""def isTagBuild() {
    // Regular expression to check if the tag matches the format vX.Y.Z
    def tagPattern = ~/^v\d+\.\d+\.\d+$/    
    // Check if GIT_TAG is set (e.g., from a tag push event)
    echo "${env.GIT_TAG}"

    echo """${sh(script: 'git describe --tags --exact-match || true').trim()}"""

    echo """${sh(script: 'git describe --tags --exact-match || true', returnStdout: true).trim()}"""


    if (env.GIT_TAG && env.GIT_TAG != "" && env.GIT_TAG ==~ tagPattern ) {
        return true
    }

    // If the tag doesn't match the format, return false
    return false
}"""


pipeline {
    agent any

    stages {

        stage('Lint') {
            when{
                expression{isTagBuild()}
            }
            steps {
                dir('.\\text_analyzer') {
                    bat 'task lint'
                }
            }
        }

        stage('Build Package') {
            when{
                expression{isTagBuild()}
            }
            steps {
                dir('.\\text_analyzer') {
                    bat 'task build ver=1.2.3'
                }
            }
        }


        stage('Test') {
            when{
                expression{isTagBuild()}
            }
            steps {
                dir('.\\text_analyzer') {
                    bat 'task test'
                }
            }
        }
    }
}


def isTagBuild() {
    def tagPattern = java.util.regex.Pattern.compile('^v\\d+\\.\\d+\\.\\d+$')

    echo "GIT_TAG env: ${env.GIT_TAG}"

    def tag = bat(
        script: 'git describe --tags --exact-match || echo ""',
        returnStdout: true
    ).trim()

    echo "Detected tag: ${tag}"

    return (tag ==~ tagPattern)
}